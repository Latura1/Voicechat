local selectedPlayerName = nil

local function teleportToPlayer()
    if not selectedPlayerName or selectedPlayerName == "Select Player" then
        warn("Kein gültiger Spieler ausgewählt!")
        return
    end

    local player = game.Players:FindFirstChild(selectedPlayerName)
    if player and player.Character then
        local character = player.Character
        local hrp = character:FindFirstChild("HumanoidRootPart")
        local playerHRP = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

        if hrp and playerHRP then
            playerHRP.CFrame = hrp.CFrame
        else
            warn("HumanoidRootPart nicht gefunden!")
        end
    else
        warn("Spieler nicht gefunden oder hat keinen Charakter!")
    end
end

local players = {"Select Player"}
for _, player in ipairs(game.Players:GetPlayers()) do
    table.insert(players, player.Name)
end

local Dropdown = DropdownSection:AddDropdown("Dropdown", {
    Title = "Teleport",
    Description = "select,
    Values = players,
    Multi = false,
    Default = 1,
    Callback = function(value)
        selectedPlayerName = value
    end
})

DropdownSection:AddButton({
    Title = "Teleport",
    Description = "teleport to player",
    Callback = function()
        teleportToPlayer()
    end
})

-- Spieler-Update-Events
game.Players.PlayerAdded:Connect(function(player)
    table.insert(players, player.Name)
    Dropdown:SetValues(players)
end)

game.Players.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(players) do
        if name == player.Name then
            table.remove(players, i)
            break
        end
    end
    Dropdown:SetValues(players)
end)
